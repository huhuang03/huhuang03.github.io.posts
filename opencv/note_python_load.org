OpenCV loader: os.name="nt"  platform.system()="Windows"
OpenCV loader: loading config: C:\Users\huhua\AppData\Local\Programs\Python\Python312\Lib\site-packages\cv2\config.py
OpenCV loader: config not found, skip: C:\Users\huhua\AppData\Local\Programs\Python\Python312\Lib\site-packages\cv2\config-3.12.py
OpenCV loader: loading config: C:\Users\huhua\AppData\Local\Programs\Python\Python312\Lib\site-packages\cv2\config-3.py
OpenCV loader: PYTHON_EXTENSIONS_PATHS=['C:\\Users\\huhua\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\cv2']
OpenCV loader: BINARIES_PATHS=['C:\\Users\\huhua\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\cv2\\../../x64/vc14/bin']
Failed os.add_dll_directory(): [WinError 3] 系统找不到指定的路径。: 'C:\\Users\\huhua\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\cv2\\../../x64/vc14/bin'
OpenCV loader: PATH=C:\Users\huhua\AppData\Local\Programs\Python\Python312\Lib\site-packages\cv2\../../x64/vc14/bin;C:\Program Files\PowerShell\7;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.5\bin;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.5\libnvvp;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.1\bin;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.1\libnvvp;C:\Program Files\Oculus\Support\oculus-runtime;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\gnupg\bin;C:\Program Files (x86)\Tencent\ 微信web开发者工具\dll;C:\Program Files\nodejs;C:\Program Files\GitHub CLI\;C:\texlive\2023\bin\windows;C:\Program Files\PuTTY\;C:\Users\huhua\Program Files\CMake\bin;C:\Program Files\SourceGear\Common\DiffMerge\;D:\Program Files\Go\bin;C:\Program Files\Git\cmd;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\Kubernetes\Minikube;D:\Program Files (x86)\NetSarang\Xshell 7\;C:\Program Files\Tailscale\;C:\Program Files\PowerShell\7\;C:\Program Files\NVIDIA Corporation\Nsight Compute 2024.2.0\;C:\Users\huhua\AppData\Local\Programs\Python\Python312\Scripts\;C:\Users\huhua\AppData\Local\Programs\Python\Python312\;C:\Users\huhua\go\bin;C:\Program Files\qemu;C:\Users\huhua\source\cocos2d-x\tools\cocos2d-console\bin;C:\Users\huhua\.cargo\bin;C:\Users\huhua\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\huhua\AppData\Roaming\npm;C:\Users\huhua\source\flutter\bin;C:\Users\huhua\.dotnet\tools;C:\Users\huhua\AppData\Local\Microsoft\WindowsApps;C:\Users\huhua\AppData\Local\apktool;C:\Users\huhua\AppData\Local\Android\Sdk\platform-tools\;D:\vcpkg;C:\Users\huhua\source\nasm;C:\Program Files\Mono\bin;C:\Program Files (x86)\elf-reader\bin;C:\Users\huhua\AppData\Local\JetBrains\Toolbox\scripts;C:\Users\huhua\AppData\Local\Yarn\bin;C:\Users\huhua\AppData\Roaming\nvm;C:\texlive\2023\bin\windows;C:\Users\huhua\AppData\Local\Microsoft\WinGet\Packages\SQLite.SQLite_Microsoft.Winget.Source_8wekyb3d8bbwe\sqlite-tools-win32-x86-3420000;C:\Users\huhua\AppData\Local\Microsoft\WinGet\Packages\GNU.Wget2_Microsoft.Winget.Source_8wekyb3d8bbwe;C:\vcpkg\installed\x64-windows\bin;C:\vcpkg\installed\x64-windows\debug\bin;C:\Program Files\emacs\emacs-29.1\bin;D:\vcpkg\installed\x64-windows\tools\Qt6\bin;C:\Users\huhua\.dotnet\tools;C:\Program Files\Java\jdk-11.0.15.1\bin;C:\Users\huhua\AppData\Local\Microsoft\WinGet\Packages\Ninja-build.Ninja_Microsoft.Winget.Source_8wekyb3d8bbwe;c:\users\huhua\.local\bin;C:\Program Files\Graphviz\bin;C:\Program Files\Kubernetes\Minikube;D:\source\flutter\bin;
Relink everything from native cv2 module to cv2 package
OpenCV loader: binary extension... OK
    symbol(aruco): Dictionary_getBitsFromByteList = <built-in function Dictionary_getBitsFromByteList>
    symbol(aruco): Dictionary_getByteListFromBits = <built-in function Dictionary_getByteListFromBits>
    symbol(aruco): drawDetectedCornersCharuco = <built-in function drawDetectedCornersCharuco>
    symbol(aruco): drawDetectedDiamonds = <built-in function drawDetectedDiamonds>
    symbol(aruco): drawDetectedMarkers = <built-in function drawDetectedMarkers>
    symbol(aruco): extendDictionary = <built-in function extendDictionary>
    symbol(aruco): generateImageMarker = <built-in function generateImageMarker>
    symbol(aruco): getPredefinedDictionary = <built-in function getPredefinedDictionary>
    symbol(aruco): CORNER_REFINE_APRILTAG = 3
    symbol(aruco): CORNER_REFINE_CONTOUR = 2
    symbol(aruco): CORNER_REFINE_NONE = 0
    symbol(aruco): CORNER_REFINE_SUBPIX = 1
    symbol(aruco): DICT_4X4_100 = 1
    symbol(aruco): DICT_4X4_1000 = 3
    symbol(aruco): DICT_4X4_250 = 2
    symbol(aruco): DICT_4X4_50 = 0
    symbol(aruco): DICT_5X5_100 = 5
    symbol(aruco): DICT_5X5_1000 = 7
    symbol(aruco): DICT_5X5_250 = 6
    symbol(aruco): DICT_5X5_50 = 4
    symbol(aruco): DICT_6X6_100 = 9
    symbol(aruco): DICT_6X6_1000 = 11
    symbol(aruco): DICT_6X6_250 = 10
    symbol(aruco): DICT_6X6_50 = 8
    symbol(aruco): DICT_7X7_100 = 13
    symbol(aruco): DICT_7X7_1000 = 15
    symbol(aruco): DICT_7X7_250 = 14
    symbol(aruco): DICT_7X7_50 = 12
    symbol(aruco): DICT_APRILTAG_16h5 = 17
    symbol(aruco): DICT_APRILTAG_16H5 = 17
    symbol(aruco): DICT_APRILTAG_25h9 = 18
    symbol(aruco): DICT_APRILTAG_25H9 = 18
    symbol(aruco): DICT_APRILTAG_36h10 = 19
    symbol(aruco): DICT_APRILTAG_36H10 = 19
    symbol(aruco): DICT_APRILTAG_36h11 = 20
    symbol(aruco): DICT_APRILTAG_36H11 = 20
    symbol(aruco): DICT_ARUCO_MIP_36h12 = 21
    symbol(aruco): DICT_ARUCO_MIP_36H12 = 21
    symbol(aruco): DICT_ARUCO_ORIGINAL = 16
    symbol(aruco): Board = <class 'cv2.aruco.Board'>
    symbol(aruco): GridBoard = <class 'cv2.aruco.GridBoard'>
    symbol(aruco): CharucoBoard = <class 'cv2.aruco.CharucoBoard'>
    symbol(aruco): DetectorParameters = <class 'cv2.aruco.DetectorParameters'>
    symbol(aruco): RefineParameters = <class 'cv2.aruco.RefineParameters'>
    symbol(aruco): ArucoDetector = <class 'cv2.aruco.ArucoDetector'>
    symbol(aruco): Dictionary = <class 'cv2.aruco.Dictionary'>
    symbol(aruco): CharucoParameters = <class 'cv2.aruco.CharucoParameters'>
    symbol(aruco): CharucoDetector = <class 'cv2.aruco.CharucoDetector'>
Extra Python code for aruco is loaded
    symbol(barcode): BarcodeDetector = <class 'cv2.barcode.BarcodeDetector'>
Extra Python code for barcode is loaded
    symbol(cuda): Event_elapsedTime = <built-in function Event_elapsedTime>
    symbol(cuda): GpuMat_defaultAllocator = <built-in function GpuMat_defaultAllocator>
    symbol(cuda): GpuMat_setDefaultAllocator = <built-in function GpuMat_setDefaultAllocator>
    symbol(cuda): Stream_Null = <built-in function Stream_Null>
    symbol(cuda): TargetArchs_has = <built-in function TargetArchs_has>
    symbol(cuda): TargetArchs_hasBin = <built-in function TargetArchs_hasBin>
    symbol(cuda): TargetArchs_hasEqualOrGreater = <built-in function TargetArchs_hasEqualOrGreater>
    symbol(cuda): TargetArchs_hasEqualOrGreaterBin = <built-in function TargetArchs_hasEqualOrGreaterBin>
    symbol(cuda): TargetArchs_hasEqualOrGreaterPtx = <built-in function TargetArchs_hasEqualOrGreaterPtx>
    symbol(cuda): TargetArchs_hasEqualOrLessPtx = <built-in function TargetArchs_hasEqualOrLessPtx>
    symbol(cuda): TargetArchs_hasPtx = <built-in function TargetArchs_hasPtx>
    symbol(cuda): createContinuous = <built-in function createContinuous>
    symbol(cuda): createGpuMatFromCudaMemory = <built-in function createGpuMatFromCudaMemory>
    symbol(cuda): ensureSizeIsEnough = <built-in function ensureSizeIsEnough>
    symbol(cuda): fastNlMeansDenoising = <built-in function fastNlMeansDenoising>
    symbol(cuda): fastNlMeansDenoisingColored = <built-in function fastNlMeansDenoisingColored>
    symbol(cuda): getCudaEnabledDeviceCount = <built-in function getCudaEnabledDeviceCount>
    symbol(cuda): getDevice = <built-in function getDevice>
    symbol(cuda): nonLocalMeans = <built-in function nonLocalMeans>
    symbol(cuda): printCudaDeviceInfo = <built-in function printCudaDeviceInfo>
    symbol(cuda): printShortCudaDeviceInfo = <built-in function printShortCudaDeviceInfo>
    symbol(cuda): registerPageLocked = <built-in function registerPageLocked>
    symbol(cuda): resetDevice = <built-in function resetDevice>
    symbol(cuda): setBufferPoolConfig = <built-in function setBufferPoolConfig>
    symbol(cuda): setBufferPoolUsage = <built-in function setBufferPoolUsage>
    symbol(cuda): setDevice = <built-in function setDevice>
    symbol(cuda): unregisterPageLocked = <built-in function unregisterPageLocked>
    symbol(cuda): wrapStream = <built-in function wrapStream>
    symbol(cuda): DYNAMIC_PARALLELISM = 35
    symbol(cuda): DeviceInfo_ComputeModeDefault = 0
    symbol(cuda): DEVICE_INFO_COMPUTE_MODE_DEFAULT = 0
    symbol(cuda): DeviceInfo_ComputeModeExclusive = 1
    symbol(cuda): DEVICE_INFO_COMPUTE_MODE_EXCLUSIVE = 1
    symbol(cuda): DeviceInfo_ComputeModeExclusiveProcess = 3
    symbol(cuda): DEVICE_INFO_COMPUTE_MODE_EXCLUSIVE_PROCESS = 3
    symbol(cuda): DeviceInfo_ComputeModeProhibited = 2
    symbol(cuda): DEVICE_INFO_COMPUTE_MODE_PROHIBITED = 2
    symbol(cuda): Event_BLOCKING_SYNC = 1
    symbol(cuda): EVENT_BLOCKING_SYNC = 1
    symbol(cuda): Event_DEFAULT = 0
    symbol(cuda): EVENT_DEFAULT = 0
    symbol(cuda): Event_DISABLE_TIMING = 2
    symbol(cuda): EVENT_DISABLE_TIMING = 2
    symbol(cuda): Event_INTERPROCESS = 4
    symbol(cuda): EVENT_INTERPROCESS = 4
    symbol(cuda): FEATURE_SET_COMPUTE_10 = 10
    symbol(cuda): FEATURE_SET_COMPUTE_11 = 11
    symbol(cuda): FEATURE_SET_COMPUTE_12 = 12
    symbol(cuda): FEATURE_SET_COMPUTE_13 = 13
    symbol(cuda): FEATURE_SET_COMPUTE_20 = 20
    symbol(cuda): FEATURE_SET_COMPUTE_21 = 21
    symbol(cuda): FEATURE_SET_COMPUTE_30 = 30
    symbol(cuda): FEATURE_SET_COMPUTE_32 = 32
    symbol(cuda): FEATURE_SET_COMPUTE_35 = 35
    symbol(cuda): FEATURE_SET_COMPUTE_50 = 50
    symbol(cuda): GLOBAL_ATOMICS = 11
    symbol(cuda): HostMem_PAGE_LOCKED = 1
    symbol(cuda): HOST_MEM_PAGE_LOCKED = 1
    symbol(cuda): HostMem_SHARED = 2
    symbol(cuda): HOST_MEM_SHARED = 2
    symbol(cuda): HostMem_WRITE_COMBINED = 4
    symbol(cuda): HOST_MEM_WRITE_COMBINED = 4
    symbol(cuda): NATIVE_DOUBLE = 13
    symbol(cuda): SHARED_ATOMICS = 12
    symbol(cuda): WARP_SHUFFLE_FUNCTIONS = 30
    symbol(cuda): GpuMat = <class 'cv2.cuda.GpuMat'>
    symbol(cuda): GpuData = <class 'cv2.cuda.GpuData'>
    symbol(cuda): GpuMatND = <class 'cv2.cuda.GpuMatND'>
    symbol(cuda): BufferPool = <class 'cv2.cuda.BufferPool'>
    symbol(cuda): HostMem = <class 'cv2.cuda.HostMem'>
    symbol(cuda): Stream = <class 'cv2.cuda.Stream'>
    symbol(cuda): Event = <class 'cv2.cuda.Event'>
    symbol(cuda): TargetArchs = <class 'cv2.cuda.TargetArchs'>
    symbol(cuda): DeviceInfo = <class 'cv2.cuda.DeviceInfo'>
Extra Python code for cuda is loaded
Extra Python code for data is loaded
    symbol(detail): BestOf2NearestMatcher_create = <built-in function BestOf2NearestMatcher_create>
    symbol(detail): Blender_createDefault = <built-in function Blender_createDefault>
    symbol(detail): ExposureCompensator_createDefault = <built-in function ExposureCompensator_createDefault>
    symbol(detail): SeamFinder_createDefault = <built-in function SeamFinder_createDefault>
    symbol(detail): Timelapser_createDefault = <built-in function Timelapser_createDefault>
    symbol(detail): calibrateRotatingCamera = <built-in function calibrateRotatingCamera>
    symbol(detail): computeImageFeatures = <built-in function computeImageFeatures>
    symbol(detail): computeImageFeatures2 = <built-in function computeImageFeatures2>
    symbol(detail): createLaplacePyr = <built-in function createLaplacePyr>
    symbol(detail): createLaplacePyrGpu = <built-in function createLaplacePyrGpu>
    symbol(detail): createWeightMap = <built-in function createWeightMap>
    symbol(detail): focalsFromHomography = <built-in function focalsFromHomography>
    symbol(detail): leaveBiggestComponent = <built-in function leaveBiggestComponent>
    symbol(detail): matchesGraphAsString = <built-in function matchesGraphAsString>
    symbol(detail): normalizeUsingWeightMap = <built-in function normalizeUsingWeightMap>
    symbol(detail): overlapRoi = <built-in function overlapRoi>
    symbol(detail): restoreImageFromLaplacePyr = <built-in function restoreImageFromLaplacePyr>
    symbol(detail): restoreImageFromLaplacePyrGpu = <built-in function restoreImageFromLaplacePyrGpu>
    symbol(detail): resultRoi = <built-in function resultRoi>
    symbol(detail): resultRoiIntersection = <built-in function resultRoiIntersection>
    symbol(detail): resultTl = <built-in function resultTl>
    symbol(detail): selectRandomSubset = <built-in function selectRandomSubset>
    symbol(detail): stitchingLogLevel = <built-in function stitchingLogLevel>
    symbol(detail): strip = <built-in function strip>
    symbol(detail): waveCorrect = <built-in function waveCorrect>
    symbol(detail): ArgKind_GARRAY = 6
    symbol(detail): ARG_KIND_GARRAY = 6
    symbol(detail): ArgKind_GFRAME = 4
    symbol(detail): ARG_KIND_GFRAME = 4
    symbol(detail): ArgKind_GMAT = 2
    symbol(detail): ARG_KIND_GMAT = 2
    symbol(detail): ArgKind_GMATP = 3
    symbol(detail): ARG_KIND_GMATP = 3
    symbol(detail): ArgKind_GOBJREF = 1
    symbol(detail): ARG_KIND_GOBJREF = 1
    symbol(detail): ArgKind_GOPAQUE = 7
    symbol(detail): ARG_KIND_GOPAQUE = 7
    symbol(detail): ArgKind_GSCALAR = 5
    symbol(detail): ARG_KIND_GSCALAR = 5
    symbol(detail): ArgKind_OPAQUE = 0
    symbol(detail): ARG_KIND_OPAQUE = 0
    symbol(detail): ArgKind_OPAQUE_VAL = 0
    symbol(detail): ARG_KIND_OPAQUE_VAL = 0
    symbol(detail): Blender_FEATHER = 1
    symbol(detail): BLENDER_FEATHER = 1
    symbol(detail): Blender_MULTI_BAND = 2
    symbol(detail): BLENDER_MULTI_BAND = 2
    symbol(detail): Blender_NO = 0
    symbol(detail): BLENDER_NO = 0
    symbol(detail): DpSeamFinder_COLOR = 0
    symbol(detail): DP_SEAM_FINDER_COLOR = 0
    symbol(detail): DpSeamFinder_COLOR_GRAD = 1
    symbol(detail): DP_SEAM_FINDER_COLOR_GRAD = 1
    symbol(detail): ExposureCompensator_CHANNELS = 3
    symbol(detail): EXPOSURE_COMPENSATOR_CHANNELS = 3
    symbol(detail): ExposureCompensator_CHANNELS_BLOCKS = 4
    symbol(detail): EXPOSURE_COMPENSATOR_CHANNELS_BLOCKS = 4
    symbol(detail): ExposureCompensator_GAIN = 1
    symbol(detail): EXPOSURE_COMPENSATOR_GAIN = 1
    symbol(detail): ExposureCompensator_GAIN_BLOCKS = 2
    symbol(detail): EXPOSURE_COMPENSATOR_GAIN_BLOCKS = 2
    symbol(detail): ExposureCompensator_NO = 0
    symbol(detail): EXPOSURE_COMPENSATOR_NO = 0
    symbol(detail): GraphCutSeamFinderBase_COST_COLOR = 0
    symbol(detail): GRAPH_CUT_SEAM_FINDER_BASE_COST_COLOR = 0
    symbol(detail): GraphCutSeamFinderBase_COST_COLOR_GRAD = 1
    symbol(detail): GRAPH_CUT_SEAM_FINDER_BASE_COST_COLOR_GRAD = 1
    symbol(detail): OpaqueKind_CV_BOOL = 1
    symbol(detail): OPAQUE_KIND_CV_BOOL = 1
    symbol(detail): OpaqueKind_CV_DOUBLE = 4
    symbol(detail): OPAQUE_KIND_CV_DOUBLE = 4
    symbol(detail): OpaqueKind_CV_DRAW_PRIM = 15
    symbol(detail): OPAQUE_KIND_CV_DRAW_PRIM = 15
    symbol(detail): OpaqueKind_CV_FLOAT = 5
    symbol(detail): OPAQUE_KIND_CV_FLOAT = 5
    symbol(detail): OpaqueKind_CV_INT = 2
    symbol(detail): OPAQUE_KIND_CV_INT = 2
    symbol(detail): OpaqueKind_CV_INT64 = 3
    symbol(detail): OPAQUE_KIND_CV_INT64 = 3
    symbol(detail): OpaqueKind_CV_MAT = 14
    symbol(detail): OPAQUE_KIND_CV_MAT = 14
    symbol(detail): OpaqueKind_CV_POINT = 8
    symbol(detail): OPAQUE_KIND_CV_POINT = 8
    symbol(detail): OpaqueKind_CV_POINT2F = 9
    symbol(detail): OPAQUE_KIND_CV_POINT2F = 9
    symbol(detail): OpaqueKind_CV_POINT3F = 10
    symbol(detail): OPAQUE_KIND_CV_POINT3F = 10
    symbol(detail): OpaqueKind_CV_RECT = 12
    symbol(detail): OPAQUE_KIND_CV_RECT = 12
    symbol(detail): OpaqueKind_CV_SCALAR = 13
    symbol(detail): OPAQUE_KIND_CV_SCALAR = 13
    symbol(detail): OpaqueKind_CV_SIZE = 11
    symbol(detail): OPAQUE_KIND_CV_SIZE = 11
    symbol(detail): OpaqueKind_CV_STRING = 7
    symbol(detail): OPAQUE_KIND_CV_STRING = 7
    symbol(detail): OpaqueKind_CV_UINT64 = 6
    symbol(detail): OPAQUE_KIND_CV_UINT64 = 6
    symbol(detail): OpaqueKind_CV_UNKNOWN = 0
    symbol(detail): OPAQUE_KIND_CV_UNKNOWN = 0
    symbol(detail): SeamFinder_DP_SEAM = 2
    symbol(detail): SEAM_FINDER_DP_SEAM = 2
    symbol(detail): SeamFinder_NO = 0
    symbol(detail): SEAM_FINDER_NO = 0
    symbol(detail): SeamFinder_VORONOI_SEAM = 1
    symbol(detail): SEAM_FINDER_VORONOI_SEAM = 1
    symbol(detail): TEST_CUSTOM = 0
    symbol(detail): TEST_EQ = 1
    symbol(detail): TEST_GE = 5
    symbol(detail): TEST_GT = 6
    symbol(detail): TEST_LE = 3
    symbol(detail): TEST_LT = 4
    symbol(detail): TEST_NE = 2
    symbol(detail): Timelapser_AS_IS = 0
    symbol(detail): TIMELAPSER_AS_IS = 0
    symbol(detail): Timelapser_CROP = 1
    symbol(detail): TIMELAPSER_CROP = 1
    symbol(detail): TrackerSamplerCSC_MODE_DETECT = 5
    symbol(detail): TRACKER_SAMPLER_CSC_MODE_DETECT = 5
    symbol(detail): TrackerSamplerCSC_MODE_INIT_NEG = 2
    symbol(detail): TRACKER_SAMPLER_CSC_MODE_INIT_NEG = 2
    symbol(detail): TrackerSamplerCSC_MODE_INIT_POS = 1
    symbol(detail): TRACKER_SAMPLER_CSC_MODE_INIT_POS = 1
    symbol(detail): TrackerSamplerCSC_MODE_TRACK_NEG = 4
    symbol(detail): TRACKER_SAMPLER_CSC_MODE_TRACK_NEG = 4
    symbol(detail): TrackerSamplerCSC_MODE_TRACK_POS = 3
    symbol(detail): TRACKER_SAMPLER_CSC_MODE_TRACK_POS = 3
    symbol(detail): WAVE_CORRECT_AUTO = 2
    symbol(detail): WAVE_CORRECT_HORIZ = 0
    symbol(detail): WAVE_CORRECT_VERT = 1
    symbol(detail): Blender = <class 'cv2.detail.Blender'>
    symbol(detail): FeatherBlender = <class 'cv2.detail.FeatherBlender'>
    symbol(detail): MultiBandBlender = <class 'cv2.detail.MultiBandBlender'>
    symbol(detail): CameraParams = <class 'cv2.detail.CameraParams'>
    symbol(detail): ExposureCompensator = <class 'cv2.detail.ExposureCompensator'>
    symbol(detail): NoExposureCompensator = <class 'cv2.detail.NoExposureCompensator'>
    symbol(detail): GainCompensator = <class 'cv2.detail.GainCompensator'>
    symbol(detail): ChannelsCompensator = <class 'cv2.detail.ChannelsCompensator'>
    symbol(detail): BlocksCompensator = <class 'cv2.detail.BlocksCompensator'>
    symbol(detail): BlocksGainCompensator = <class 'cv2.detail.BlocksGainCompensator'>
    symbol(detail): BlocksChannelsCompensator = <class 'cv2.detail.BlocksChannelsCompensator'>
    symbol(detail): ImageFeatures = <class 'cv2.detail.ImageFeatures'>
    symbol(detail): MatchesInfo = <class 'cv2.detail.MatchesInfo'>
    symbol(detail): FeaturesMatcher = <class 'cv2.detail.FeaturesMatcher'>
    symbol(detail): BestOf2NearestMatcher = <class 'cv2.detail.BestOf2NearestMatcher'>
    symbol(detail): BestOf2NearestRangeMatcher = <class 'cv2.detail.BestOf2NearestRangeMatcher'>
    symbol(detail): AffineBestOf2NearestMatcher = <class 'cv2.detail.AffineBestOf2NearestMatcher'>
    symbol(detail): Estimator = <class 'cv2.detail.Estimator'>
    symbol(detail): HomographyBasedEstimator = <class 'cv2.detail.HomographyBasedEstimator'>
    symbol(detail): AffineBasedEstimator = <class 'cv2.detail.AffineBasedEstimator'>
    symbol(detail): BundleAdjusterBase = <class 'cv2.detail.BundleAdjusterBase'>
    symbol(detail): NoBundleAdjuster = <class 'cv2.detail.NoBundleAdjuster'>
    symbol(detail): BundleAdjusterReproj = <class 'cv2.detail.BundleAdjusterReproj'>
    symbol(detail): BundleAdjusterRay = <class 'cv2.detail.BundleAdjusterRay'>
    symbol(detail): BundleAdjusterAffine = <class 'cv2.detail.BundleAdjusterAffine'>
    symbol(detail): BundleAdjusterAffinePartial = <class 'cv2.detail.BundleAdjusterAffinePartial'>
    symbol(detail): SeamFinder = <class 'cv2.detail.SeamFinder'>
    symbol(detail): NoSeamFinder = <class 'cv2.detail.NoSeamFinder'>
    symbol(detail): PairwiseSeamFinder = <class 'cv2.detail.PairwiseSeamFinder'>
    symbol(detail): VoronoiSeamFinder = <class 'cv2.detail.VoronoiSeamFinder'>
    symbol(detail): DpSeamFinder = <class 'cv2.detail.DpSeamFinder'>
    symbol(detail): GraphCutSeamFinder = <class 'cv2.detail.GraphCutSeamFinder'>
    symbol(detail): Timelapser = <class 'cv2.detail.Timelapser'>
    symbol(detail): TimelapserCrop = <class 'cv2.detail.TimelapserCrop'>
    symbol(detail): ProjectorBase = <class 'cv2.detail.ProjectorBase'>
    symbol(detail): SphericalProjector = <class 'cv2.detail.SphericalProjector'>
Extra Python code for detail is loaded
    symbol(dnn): NMSBoxes = <built-in function NMSBoxes>
    symbol(dnn): NMSBoxesBatched = <built-in function NMSBoxesBatched>
    symbol(dnn): NMSBoxesRotated = <built-in function NMSBoxesRotated>
    symbol(dnn): Net_readFromModelOptimizer = <built-in function Net_readFromModelOptimizer>
    symbol(dnn): blobFromImage = <built-in function blobFromImage>
    symbol(dnn): blobFromImageWithParams = <built-in function blobFromImageWithParams>
    symbol(dnn): blobFromImages = <built-in function blobFromImages>
    symbol(dnn): blobFromImagesWithParams = <built-in function blobFromImagesWithParams>
    symbol(dnn): getAvailableTargets = <built-in function getAvailableTargets>
    symbol(dnn): imagesFromBlob = <built-in function imagesFromBlob>
    symbol(dnn): readNet = <built-in function readNet>
    symbol(dnn): readNetFromCaffe = <built-in function readNetFromCaffe>
    symbol(dnn): readNetFromDarknet = <built-in function readNetFromDarknet>
    symbol(dnn): readNetFromModelOptimizer = <built-in function readNetFromModelOptimizer>
    symbol(dnn): readNetFromONNX = <built-in function readNetFromONNX>
    symbol(dnn): readNetFromTFLite = <built-in function readNetFromTFLite>
    symbol(dnn): readNetFromTensorflow = <built-in function readNetFromTensorflow>
    symbol(dnn): readNetFromTorch = <built-in function readNetFromTorch>
    symbol(dnn): readTensorFromONNX = <built-in function readTensorFromONNX>
    symbol(dnn): readTorchBlob = <built-in function readTorchBlob>
    symbol(dnn): shrinkCaffeModel = <built-in function shrinkCaffeModel>
    symbol(dnn): softNMSBoxes = <built-in function softNMSBoxes>
    symbol(dnn): writeTextGraph = <built-in function writeTextGraph>
    symbol(dnn): DNN_BACKEND_CANN = 8
    symbol(dnn): DNN_BACKEND_CUDA = 5
    symbol(dnn): DNN_BACKEND_DEFAULT = 0
    symbol(dnn): DNN_BACKEND_HALIDE = 1
    symbol(dnn): DNN_BACKEND_INFERENCE_ENGINE = 2
    symbol(dnn): DNN_BACKEND_OPENCV = 3
    symbol(dnn): DNN_BACKEND_TIMVX = 7
    symbol(dnn): DNN_BACKEND_VKCOM = 4
    symbol(dnn): DNN_BACKEND_WEBNN = 6
    symbol(dnn): DNN_LAYOUT_NCDHW = 3
    symbol(dnn): DNN_LAYOUT_NCHW = 2
    symbol(dnn): DNN_LAYOUT_ND = 1
    symbol(dnn): DNN_LAYOUT_NDHWC = 5
    symbol(dnn): DNN_LAYOUT_NHWC = 4
    symbol(dnn): DNN_LAYOUT_PLANAR = 6
    symbol(dnn): DNN_LAYOUT_UNKNOWN = 0
    symbol(dnn): DNN_PMODE_CROP_CENTER = 1
    symbol(dnn): DNN_PMODE_LETTERBOX = 2
    symbol(dnn): DNN_PMODE_NULL = 0
    symbol(dnn): DNN_TARGET_CPU = 0
    symbol(dnn): DNN_TARGET_CPU_FP16 = 10
    symbol(dnn): DNN_TARGET_CUDA = 6
    symbol(dnn): DNN_TARGET_CUDA_FP16 = 7
    symbol(dnn): DNN_TARGET_FPGA = 5
    symbol(dnn): DNN_TARGET_HDDL = 8
    symbol(dnn): DNN_TARGET_MYRIAD = 3
    symbol(dnn): DNN_TARGET_NPU = 9
    symbol(dnn): DNN_TARGET_OPENCL = 1
    symbol(dnn): DNN_TARGET_OPENCL_FP16 = 2
    symbol(dnn): DNN_TARGET_VULKAN = 4
    symbol(dnn): SoftNMSMethod_SOFTNMS_GAUSSIAN = 2
    symbol(dnn): SOFT_NMSMETHOD_SOFTNMS_GAUSSIAN = 2
    symbol(dnn): SoftNMSMethod_SOFTNMS_LINEAR = 1
    symbol(dnn): SOFT_NMSMETHOD_SOFTNMS_LINEAR = 1
    symbol(dnn): DictValue = <class 'cv2.dnn.DictValue'>
    symbol(dnn): Layer = <class 'cv2.dnn.Layer'>
    symbol(dnn): Net = <class 'cv2.dnn.Net'>
    symbol(dnn): Image2BlobParams = <class 'cv2.dnn.Image2BlobParams'>
    symbol(dnn): Model = <class 'cv2.dnn.Model'>
    symbol(dnn): ClassificationModel = <class 'cv2.dnn.ClassificationModel'>
    symbol(dnn): KeypointsModel = <class 'cv2.dnn.KeypointsModel'>
    symbol(dnn): SegmentationModel = <class 'cv2.dnn.SegmentationModel'>
    symbol(dnn): DetectionModel = <class 'cv2.dnn.DetectionModel'>
    symbol(dnn): TextRecognitionModel = <class 'cv2.dnn.TextRecognitionModel'>
    symbol(dnn): TextDetectionModel = <class 'cv2.dnn.TextDetectionModel'>
    symbol(dnn): TextDetectionModel_EAST = <class 'cv2.dnn.TextDetectionModel_EAST'>
    symbol(dnn): TextDetectionModel_DB = <class 'cv2.dnn.TextDetectionModel_DB'>
Extra Python code for dnn is loaded
    symbol(Error): BadAlign = -21
    symbol(Error): BAD_ALIGN = -21
    symbol(Error): BadAlphaChannel = -18
    symbol(Error): BAD_ALPHA_CHANNEL = -18
    symbol(Error): BadCOI = -24
    symbol(Error): BAD_COI = -24
    symbol(Error): BadCallBack = -22
    symbol(Error): BAD_CALL_BACK = -22
    symbol(Error): BadDataPtr = -12
    symbol(Error): BAD_DATA_PTR = -12
    symbol(Error): BadDepth = -17
    symbol(Error): BAD_DEPTH = -17
    symbol(Error): BadImageSize = -10
    symbol(Error): BAD_IMAGE_SIZE = -10
    symbol(Error): BadModelOrChSeq = -14
    symbol(Error): BAD_MODEL_OR_CH_SEQ = -14
    symbol(Error): BadNumChannel1U = -16
    symbol(Error): BAD_NUM_CHANNEL1U = -16
    symbol(Error): BadNumChannels = -15
    symbol(Error): BAD_NUM_CHANNELS = -15
    symbol(Error): BadOffset = -11
    symbol(Error): BAD_OFFSET = -11
    symbol(Error): BadOrder = -19
    symbol(Error): BAD_ORDER = -19
    symbol(Error): BadOrigin = -20
    symbol(Error): BAD_ORIGIN = -20
    symbol(Error): BadROISize = -25
    symbol(Error): BAD_ROISIZE = -25
    symbol(Error): BadStep = -13
    symbol(Error): BAD_STEP = -13
    symbol(Error): BadTileSize = -23
    symbol(Error): BAD_TILE_SIZE = -23
    symbol(Error): GpuApiCallError = -217
    symbol(Error): GPU_API_CALL_ERROR = -217
    symbol(Error): GpuNotSupported = -216
    symbol(Error): GPU_NOT_SUPPORTED = -216
    symbol(Error): HeaderIsNull = -9
    symbol(Error): HEADER_IS_NULL = -9
    symbol(Error): MaskIsTiled = -26
    symbol(Error): MASK_IS_TILED = -26
    symbol(Error): OpenCLApiCallError = -220
    symbol(Error): OPEN_CLAPI_CALL_ERROR = -220
    symbol(Error): OpenCLDoubleNotSupported = -221
    symbol(Error): OPEN_CLDOUBLE_NOT_SUPPORTED = -221
    symbol(Error): OpenCLInitError = -222
    symbol(Error): OPEN_CLINIT_ERROR = -222
    symbol(Error): OpenCLNoAMDBlasFft = -223
    symbol(Error): OPEN_CLNO_AMDBLAS_FFT = -223
    symbol(Error): OpenGlApiCallError = -219
    symbol(Error): OPEN_GL_API_CALL_ERROR = -219
    symbol(Error): OpenGlNotSupported = -218
    symbol(Error): OPEN_GL_NOT_SUPPORTED = -218
    symbol(Error): StsAssert = -215
    symbol(Error): STS_ASSERT = -215
    symbol(Error): StsAutoTrace = -8
    symbol(Error): STS_AUTO_TRACE = -8
    symbol(Error): StsBackTrace = -1
    symbol(Error): STS_BACK_TRACE = -1
    symbol(Error): StsBadArg = -5
    symbol(Error): STS_BAD_ARG = -5
    symbol(Error): StsBadFlag = -206
    symbol(Error): STS_BAD_FLAG = -206
    symbol(Error): StsBadFunc = -6
    symbol(Error): STS_BAD_FUNC = -6
    symbol(Error): StsBadMask = -208
    symbol(Error): STS_BAD_MASK = -208
    symbol(Error): StsBadMemBlock = -214
    symbol(Error): STS_BAD_MEM_BLOCK = -214
    symbol(Error): StsBadPoint = -207
    symbol(Error): STS_BAD_POINT = -207
    symbol(Error): StsBadSize = -201
    symbol(Error): STS_BAD_SIZE = -201
    symbol(Error): StsDivByZero = -202
    symbol(Error): STS_DIV_BY_ZERO = -202
    symbol(Error): StsError = -2
    symbol(Error): STS_ERROR = -2
    symbol(Error): StsFilterOffsetErr = -31
    symbol(Error): STS_FILTER_OFFSET_ERR = -31
    symbol(Error): StsFilterStructContentErr = -29
    symbol(Error): STS_FILTER_STRUCT_CONTENT_ERR = -29
    symbol(Error): StsInplaceNotSupported = -203
    symbol(Error): STS_INPLACE_NOT_SUPPORTED = -203
    symbol(Error): StsInternal = -3
    symbol(Error): STS_INTERNAL = -3
    symbol(Error): StsKernelStructContentErr = -30
    symbol(Error): STS_KERNEL_STRUCT_CONTENT_ERR = -30
    symbol(Error): StsNoConv = -7
    symbol(Error): STS_NO_CONV = -7
    symbol(Error): StsNoMem = -4
    symbol(Error): STS_NO_MEM = -4
    symbol(Error): StsNotImplemented = -213
    symbol(Error): STS_NOT_IMPLEMENTED = -213
    symbol(Error): StsNullPtr = -27
    symbol(Error): STS_NULL_PTR = -27
    symbol(Error): StsObjectNotFound = -204
    symbol(Error): STS_OBJECT_NOT_FOUND = -204
    symbol(Error): StsOk = 0
    symbol(Error): STS_OK = 0
    symbol(Error): StsOutOfRange = -211
    symbol(Error): STS_OUT_OF_RANGE = -211
    symbol(Error): StsParseError = -212
    symbol(Error): STS_PARSE_ERROR = -212
    symbol(Error): StsUnmatchedFormats = -205
    symbol(Error): STS_UNMATCHED_FORMATS = -205
    symbol(Error): StsUnmatchedSizes = -209
    symbol(Error): STS_UNMATCHED_SIZES = -209
    symbol(Error): StsUnsupportedFormat = -210
    symbol(Error): STS_UNSUPPORTED_FORMAT = -210
    symbol(Error): StsVecLengthErr = -28
    symbol(Error): STS_VEC_LENGTH_ERR = -28
Extra Python code for Error is loaded
    symbol(fisheye): calibrate = <built-in function calibrate>
    symbol(fisheye): distortPoints = <built-in function distortPoints>
    symbol(fisheye): estimateNewCameraMatrixForUndistortRectify = <built-in function estimateNewCameraMatrixForUndistortRectify>
    symbol(fisheye): initUndistortRectifyMap = <built-in function initUndistortRectifyMap>
    symbol(fisheye): projectPoints = <built-in function projectPoints>
    symbol(fisheye): solvePnP = <built-in function solvePnP>
    symbol(fisheye): stereoCalibrate = <built-in function stereoCalibrate>
    symbol(fisheye): stereoRectify = <built-in function stereoRectify>
    symbol(fisheye): undistortImage = <built-in function undistortImage>
    symbol(fisheye): undistortPoints = <built-in function undistortPoints>
    symbol(fisheye): CALIB_CHECK_COND = 4
    symbol(fisheye): CALIB_FIX_FOCAL_LENGTH = 2048
    symbol(fisheye): CALIB_FIX_INTRINSIC = 256
    symbol(fisheye): CALIB_FIX_K1 = 16
    symbol(fisheye): CALIB_FIX_K2 = 32
    symbol(fisheye): CALIB_FIX_K3 = 64
    symbol(fisheye): CALIB_FIX_K4 = 128
    symbol(fisheye): CALIB_FIX_PRINCIPAL_POINT = 512
    symbol(fisheye): CALIB_FIX_SKEW = 8
    symbol(fisheye): CALIB_RECOMPUTE_EXTRINSIC = 2
    symbol(fisheye): CALIB_USE_INTRINSIC_GUESS = 1
    symbol(fisheye): CALIB_ZERO_DISPARITY = 1024
Extra Python code for fisheye is loaded
    symbol(flann): FLANN_INDEX_TYPE_16S = 3
    symbol(flann): FLANN_INDEX_TYPE_16U = 2
    symbol(flann): FLANN_INDEX_TYPE_32F = 5
    symbol(flann): FLANN_INDEX_TYPE_32S = 4
    symbol(flann): FLANN_INDEX_TYPE_64F = 6
    symbol(flann): FLANN_INDEX_TYPE_8S = 1
    symbol(flann): FLANN_INDEX_TYPE_8U = 0
    symbol(flann): FLANN_INDEX_TYPE_ALGORITHM = 9
    symbol(flann): FLANN_INDEX_TYPE_BOOL = 8
    symbol(flann): FLANN_INDEX_TYPE_STRING = 7
    symbol(flann): LAST_VALUE_FLANN_INDEX_TYPE = 9
    symbol(flann): Index = <class 'cv2.flann.Index'>
Extra Python code for flann is loaded
    symbol(gapi): BGR2Gray = <built-in function BGR2Gray>
    symbol(gapi): BGR2I420 = <built-in function BGR2I420>
    symbol(gapi): BGR2LUV = <built-in function BGR2LUV>
    symbol(gapi): BGR2RGB = <built-in function BGR2RGB>
    symbol(gapi): BGR2YUV = <built-in function BGR2YUV>
    symbol(gapi): BayerGR2RGB = <built-in function BayerGR2RGB>
    symbol(gapi): Canny = <built-in function Canny>
    symbol(gapi): I4202BGR = <built-in function I4202BGR>
    symbol(gapi): I4202RGB = <built-in function I4202RGB>
    symbol(gapi): LUT = <built-in function LUT>
    symbol(gapi): LUV2BGR = <built-in function LUV2BGR>
    symbol(gapi): Laplacian = <built-in function Laplacian>
    symbol(gapi): NV12toBGR = <built-in function NV12toBGR>
    symbol(gapi): NV12toGray = <built-in function NV12toGray>
    symbol(gapi): NV12toRGB = <built-in function NV12toRGB>
    symbol(gapi): RGB2Gray = <built-in function RGB2Gray>
    symbol(gapi): RGB2HSV = <built-in function RGB2HSV>
    symbol(gapi): RGB2I420 = <built-in function RGB2I420>
    symbol(gapi): RGB2Lab = <built-in function RGB2Lab>
    symbol(gapi): RGB2YUV = <built-in function RGB2YUV>
    symbol(gapi): RGB2YUV422 = <built-in function RGB2YUV422>
    symbol(gapi): Sobel = <built-in function Sobel>
    symbol(gapi): SobelXY = <built-in function SobelXY>
    symbol(gapi): YUV2BGR = <built-in function YUV2BGR>
    symbol(gapi): YUV2RGB = <built-in function YUV2RGB>
    symbol(gapi): absDiff = <built-in function absDiff>
    symbol(gapi): absDiffC = <built-in function absDiffC>
    symbol(gapi): add = <built-in function add>
    symbol(gapi): addC = <built-in function addC>
    symbol(gapi): addWeighted = <built-in function addWeighted>
    symbol(gapi): bilateralFilter = <built-in function bilateralFilter>
    symbol(gapi): bitwise_and = <built-in function bitwise_and>
    symbol(gapi): bitwise_not = <built-in function bitwise_not>
    symbol(gapi): bitwise_or = <built-in function bitwise_or>
    symbol(gapi): bitwise_xor = <built-in function bitwise_xor>
    symbol(gapi): blur = <built-in function blur>
    symbol(gapi): boundingRect = <built-in function boundingRect>
    symbol(gapi): boxFilter = <built-in function boxFilter>
    symbol(gapi): cartToPolar = <built-in function cartToPolar>
    symbol(gapi): cmpEQ = <built-in function cmpEQ>
    symbol(gapi): cmpGE = <built-in function cmpGE>
    symbol(gapi): cmpGT = <built-in function cmpGT>
    symbol(gapi): cmpLE = <built-in function cmpLE>
    symbol(gapi): cmpLT = <built-in function cmpLT>
    symbol(gapi): cmpNE = <built-in function cmpNE>
    symbol(gapi): combine = <built-in function combine>
    symbol(gapi): concatHor = <built-in function concatHor>
    symbol(gapi): concatVert = <built-in function concatVert>
    symbol(gapi): convertTo = <built-in function convertTo>
    symbol(gapi): copy = <built-in function copy>
    symbol(gapi): countNonZero = <built-in function countNonZero>
    symbol(gapi): crop = <built-in function crop>
    symbol(gapi): dilate = <built-in function dilate>
    symbol(gapi): dilate3x3 = <built-in function dilate3x3>
    symbol(gapi): div = <built-in function div>
    symbol(gapi): divC = <built-in function divC>
    symbol(gapi): divRC = <built-in function divRC>
    symbol(gapi): equalizeHist = <built-in function equalizeHist>
    symbol(gapi): erode = <built-in function erode>
    symbol(gapi): erode3x3 = <built-in function erode3x3>
    symbol(gapi): filter2D = <built-in function filter2D>
    symbol(gapi): flip = <built-in function flip>
    symbol(gapi): gaussianBlur = <built-in function gaussianBlur>
    symbol(gapi): goodFeaturesToTrack = <built-in function goodFeaturesToTrack>
    symbol(gapi): inRange = <built-in function inRange>
    symbol(gapi): infer = <built-in function infer>
    symbol(gapi): infer2 = <built-in function infer2>
    symbol(gapi): integral = <built-in function integral>
    symbol(gapi): kmeans = <built-in function kmeans>
    symbol(gapi): mask = <built-in function mask>
    symbol(gapi): max = <built-in function max>
    symbol(gapi): mean = <built-in function mean>
    symbol(gapi): medianBlur = <built-in function medianBlur>
    symbol(gapi): merge3 = <built-in function merge3>
    symbol(gapi): merge4 = <built-in function merge4>
    symbol(gapi): min = <built-in function min>
    symbol(gapi): morphologyEx = <built-in function morphologyEx>
    symbol(gapi): mul = <built-in function mul>
    symbol(gapi): mulC = <built-in function mulC>
    symbol(gapi): normInf = <built-in function normInf>
    symbol(gapi): normL1 = <built-in function normL1>
    symbol(gapi): normL2 = <built-in function normL2>
    symbol(gapi): normalize = <built-in function normalize>
    symbol(gapi): parseSSD = <built-in function parseSSD>
    symbol(gapi): parseYolo = <built-in function parseYolo>
    symbol(gapi): phase = <built-in function phase>
    symbol(gapi): polarToCart = <built-in function polarToCart>
    symbol(gapi): remap = <built-in function remap>
    symbol(gapi): resize = <built-in function resize>
    symbol(gapi): select = <built-in function select>
    symbol(gapi): sepFilter = <built-in function sepFilter>
    symbol(gapi): split3 = <built-in function split3>
    symbol(gapi): split4 = <built-in function split4>
    symbol(gapi): sqrt = <built-in function sqrt>
    symbol(gapi): sub = <built-in function sub>
    symbol(gapi): subC = <built-in function subC>
    symbol(gapi): subRC = <built-in function subRC>
    symbol(gapi): sum = <built-in function sum>
    symbol(gapi): threshold = <built-in function threshold>
    symbol(gapi): transpose = <built-in function transpose>
    symbol(gapi): warpAffine = <built-in function warpAffine>
    symbol(gapi): warpPerspective = <built-in function warpPerspective>
    symbol(gapi): kernels = <built-in function kernels>
    symbol(gapi): __op = <built-in function __op>
    symbol(gapi): CV_ANY = 16
    symbol(gapi): CV_BOOL = 0
    symbol(gapi): CV_DOUBLE = 4
    symbol(gapi): CV_DRAW_PRIM = 15
    symbol(gapi): CV_FLOAT = 5
    symbol(gapi): CV_GMAT = 14
    symbol(gapi): CV_INT = 1
    symbol(gapi): CV_INT64 = 2
    symbol(gapi): CV_MAT = 13
    symbol(gapi): CV_POINT = 7
    symbol(gapi): CV_POINT2F = 8
    symbol(gapi): CV_POINT3F = 9
    symbol(gapi): CV_RECT = 11
    symbol(gapi): CV_SCALAR = 12
    symbol(gapi): CV_SIZE = 10
    symbol(gapi): CV_STRING = 6
    symbol(gapi): CV_UINT64 = 3
    symbol(gapi): StereoOutputFormat_DEPTH_16F = 0
    symbol(gapi): STEREO_OUTPUT_FORMAT_DEPTH_16F = 0
    symbol(gapi): StereoOutputFormat_DEPTH_32F = 1
    symbol(gapi): STEREO_OUTPUT_FORMAT_DEPTH_32F = 1
    symbol(gapi): StereoOutputFormat_DEPTH_FLOAT16 = 0
    symbol(gapi): STEREO_OUTPUT_FORMAT_DEPTH_FLOAT16 = 0
    symbol(gapi): StereoOutputFormat_DEPTH_FLOAT32 = 1
    symbol(gapi): STEREO_OUTPUT_FORMAT_DEPTH_FLOAT32 = 1
    symbol(gapi): StereoOutputFormat_DISPARITY_16Q_10_5 = 2
    symbol(gapi): STEREO_OUTPUT_FORMAT_DISPARITY_16Q_10_5 = 2
    symbol(gapi): StereoOutputFormat_DISPARITY_16Q_11_4 = 3
    symbol(gapi): STEREO_OUTPUT_FORMAT_DISPARITY_16Q_11_4 = 3
    symbol(gapi): StereoOutputFormat_DISPARITY_FIXED16_11_5 = 2
    symbol(gapi): STEREO_OUTPUT_FORMAT_DISPARITY_FIXED16_11_5 = 2
    symbol(gapi): StereoOutputFormat_DISPARITY_FIXED16_12_4 = 3
    symbol(gapi): STEREO_OUTPUT_FORMAT_DISPARITY_FIXED16_12_4 = 3
    symbol(gapi): core = <module 'cv2.gapi.core'>
    symbol(gapi): ie = <module 'cv2.gapi.ie'>
    symbol(gapi): imgproc = <module 'cv2.gapi.imgproc'>
    symbol(gapi): oak = <module 'cv2.gapi.oak'>
    symbol(gapi): onnx = <module 'cv2.gapi.onnx'>
    symbol(gapi): ot = <module 'cv2.gapi.ot'>
    symbol(gapi): ov = <module 'cv2.gapi.ov'>
    symbol(gapi): own = <module 'cv2.gapi.own'>
    symbol(gapi): render = <module 'cv2.gapi.render'>
    symbol(gapi): streaming = <module 'cv2.gapi.streaming'>
    symbol(gapi): video = <module 'cv2.gapi.video'>
    symbol(gapi): wip = <module 'cv2.gapi.wip'>
    symbol(gapi): GNetParam = <class 'cv2.gapi.GNetParam'>
    symbol(gapi): GNetPackage = <class 'cv2.gapi.GNetPackage'>
Extra Python code for gapi is loaded
    symbol(ipp): getIppVersion = <built-in function getIppVersion>
    symbol(ipp): setUseIPP = <built-in function setUseIPP>
    symbol(ipp): setUseIPP_NotExact = <built-in function setUseIPP_NotExact>
    symbol(ipp): useIPP = <built-in function useIPP>
    symbol(ipp): useIPP_NotExact = <built-in function useIPP_NotExact>
Extra Python code for ipp is loaded
Extra Python code for mat_wrapper is loaded
Extra Python code for misc is loaded
    symbol(ml): ANN_MLP_create = <built-in function ANN_MLP_create>
    symbol(ml): ANN_MLP_load = <built-in function ANN_MLP_load>
    symbol(ml): Boost_create = <built-in function Boost_create>
    symbol(ml): Boost_load = <built-in function Boost_load>
    symbol(ml): DTrees_create = <built-in function DTrees_create>
    symbol(ml): DTrees_load = <built-in function DTrees_load>
    symbol(ml): EM_create = <built-in function EM_create>
    symbol(ml): EM_load = <built-in function EM_load>
    symbol(ml): KNearest_create = <built-in function KNearest_create>
    symbol(ml): KNearest_load = <built-in function KNearest_load>
    symbol(ml): LogisticRegression_create = <built-in function LogisticRegression_create>
    symbol(ml): LogisticRegression_load = <built-in function LogisticRegression_load>
    symbol(ml): NormalBayesClassifier_create = <built-in function NormalBayesClassifier_create>
    symbol(ml): NormalBayesClassifier_load = <built-in function NormalBayesClassifier_load>
    symbol(ml): ParamGrid_create = <built-in function ParamGrid_create>
    symbol(ml): RTrees_create = <built-in function RTrees_create>
    symbol(ml): RTrees_load = <built-in function RTrees_load>
    symbol(ml): SVMSGD_create = <built-in function SVMSGD_create>
    symbol(ml): SVMSGD_load = <built-in function SVMSGD_load>
    symbol(ml): SVM_create = <built-in function SVM_create>
    symbol(ml): SVM_getDefaultGridPtr = <built-in function SVM_getDefaultGridPtr>
    symbol(ml): SVM_load = <built-in function SVM_load>
    symbol(ml): TrainData_create = <built-in function TrainData_create>
    symbol(ml): TrainData_getSubMatrix = <built-in function TrainData_getSubMatrix>
    symbol(ml): TrainData_getSubVector = <built-in function TrainData_getSubVector>
    symbol(ml): ANN_MLP_ANNEAL = 2
    symbol(ml): ANN_MLP_BACKPROP = 0
    symbol(ml): ANN_MLP_GAUSSIAN = 2
    symbol(ml): ANN_MLP_IDENTITY = 0
    symbol(ml): ANN_MLP_LEAKYRELU = 4
    symbol(ml): ANN_MLP_NO_INPUT_SCALE = 2
    symbol(ml): ANN_MLP_NO_OUTPUT_SCALE = 4
    symbol(ml): ANN_MLP_RELU = 3
    symbol(ml): ANN_MLP_RPROP = 1
    symbol(ml): ANN_MLP_SIGMOID_SYM = 1
    symbol(ml): ANN_MLP_UPDATE_WEIGHTS = 1
    symbol(ml): Boost_DISCRETE = 0
    symbol(ml): BOOST_DISCRETE = 0
    symbol(ml): Boost_GENTLE = 3
    symbol(ml): BOOST_GENTLE = 3
    symbol(ml): Boost_LOGIT = 2
    symbol(ml): BOOST_LOGIT = 2
    symbol(ml): Boost_REAL = 1
    symbol(ml): BOOST_REAL = 1
    symbol(ml): COL_SAMPLE = 1
    symbol(ml): DTrees_PREDICT_AUTO = 0
    symbol(ml): DTREES_PREDICT_AUTO = 0
    symbol(ml): DTrees_PREDICT_MASK = 768
    symbol(ml): DTREES_PREDICT_MASK = 768
    symbol(ml): DTrees_PREDICT_MAX_VOTE = 512
    symbol(ml): DTREES_PREDICT_MAX_VOTE = 512
    symbol(ml): DTrees_PREDICT_SUM = 256
    symbol(ml): DTREES_PREDICT_SUM = 256
    symbol(ml): EM_COV_MAT_DEFAULT = 1
    symbol(ml): EM_COV_MAT_DIAGONAL = 1
    symbol(ml): EM_COV_MAT_GENERIC = 2
    symbol(ml): EM_COV_MAT_SPHERICAL = 0
    symbol(ml): EM_DEFAULT_MAX_ITERS = 100
    symbol(ml): EM_DEFAULT_NCLUSTERS = 5
    symbol(ml): EM_START_AUTO_STEP = 0
    symbol(ml): EM_START_E_STEP = 1
    symbol(ml): EM_START_M_STEP = 2
    symbol(ml): KNearest_BRUTE_FORCE = 1
    symbol(ml): KNEAREST_BRUTE_FORCE = 1
    symbol(ml): KNearest_KDTREE = 2
    symbol(ml): KNEAREST_KDTREE = 2
    symbol(ml): LogisticRegression_BATCH = 0
    symbol(ml): LOGISTIC_REGRESSION_BATCH = 0
    symbol(ml): LogisticRegression_MINI_BATCH = 1
    symbol(ml): LOGISTIC_REGRESSION_MINI_BATCH = 1
    symbol(ml): LogisticRegression_REG_DISABLE = -1
    symbol(ml): LOGISTIC_REGRESSION_REG_DISABLE = -1
    symbol(ml): LogisticRegression_REG_L1 = 0
    symbol(ml): LOGISTIC_REGRESSION_REG_L1 = 0
    symbol(ml): LogisticRegression_REG_L2 = 1
    symbol(ml): LOGISTIC_REGRESSION_REG_L2 = 1
    symbol(ml): ROW_SAMPLE = 0
    symbol(ml): SVMSGD_ASGD = 1
    symbol(ml): SVMSGD_HARD_MARGIN = 1
    symbol(ml): SVMSGD_SGD = 0
    symbol(ml): SVMSGD_SOFT_MARGIN = 0
    symbol(ml): SVM_C = 0
    symbol(ml): SVM_CHI2 = 4
    symbol(ml): SVM_COEF = 4
    symbol(ml): SVM_CUSTOM = -1
    symbol(ml): SVM_C_SVC = 100
    symbol(ml): SVM_DEGREE = 5
    symbol(ml): SVM_EPS_SVR = 103
    symbol(ml): SVM_GAMMA = 1
    symbol(ml): SVM_INTER = 5
    symbol(ml): SVM_LINEAR = 0
    symbol(ml): SVM_NU = 3
    symbol(ml): SVM_NU_SVC = 101
    symbol(ml): SVM_NU_SVR = 104
    symbol(ml): SVM_ONE_CLASS = 102
    symbol(ml): SVM_P = 2
    symbol(ml): SVM_POLY = 1
    symbol(ml): SVM_RBF = 2
    symbol(ml): SVM_SIGMOID = 3
    symbol(ml): StatModel_COMPRESSED_INPUT = 2
    symbol(ml): STAT_MODEL_COMPRESSED_INPUT = 2
    symbol(ml): StatModel_PREPROCESSED_INPUT = 4
    symbol(ml): STAT_MODEL_PREPROCESSED_INPUT = 4
    symbol(ml): StatModel_RAW_OUTPUT = 1
    symbol(ml): STAT_MODEL_RAW_OUTPUT = 1
    symbol(ml): StatModel_UPDATE_MODEL = 1
    symbol(ml): STAT_MODEL_UPDATE_MODEL = 1
    symbol(ml): TEST_ERROR = 0
    symbol(ml): TRAIN_ERROR = 1
    symbol(ml): VAR_CATEGORICAL = 1
    symbol(ml): VAR_NUMERICAL = 0
    symbol(ml): VAR_ORDERED = 0
    symbol(ml): ParamGrid = <class 'cv2.ml.ParamGrid'>
    symbol(ml): TrainData = <class 'cv2.ml.TrainData'>
    symbol(ml): StatModel = <class 'cv2.ml.StatModel'>
    symbol(ml): NormalBayesClassifier = <class 'cv2.ml.NormalBayesClassifier'>
    symbol(ml): KNearest = <class 'cv2.ml.KNearest'>
    symbol(ml): SVM = <class 'cv2.ml.SVM'>
    symbol(ml): EM = <class 'cv2.ml.EM'>
    symbol(ml): DTrees = <class 'cv2.ml.DTrees'>
    symbol(ml): RTrees = <class 'cv2.ml.RTrees'>
    symbol(ml): Boost = <class 'cv2.ml.Boost'>
    symbol(ml): ANN_MLP = <class 'cv2.ml.ANN_MLP'>
    symbol(ml): LogisticRegression = <class 'cv2.ml.LogisticRegression'>
    symbol(ml): SVMSGD = <class 'cv2.ml.SVMSGD'>
Extra Python code for ml is loaded
    symbol(ocl): Device_getDefault = <built-in function Device_getDefault>
    symbol(ocl): finish = <built-in function finish>
    symbol(ocl): haveAmdBlas = <built-in function haveAmdBlas>
    symbol(ocl): haveAmdFft = <built-in function haveAmdFft>
    symbol(ocl): haveOpenCL = <built-in function haveOpenCL>
    symbol(ocl): setUseOpenCL = <built-in function setUseOpenCL>
    symbol(ocl): useOpenCL = <built-in function useOpenCL>
    symbol(ocl): Device_EXEC_KERNEL = 1
    symbol(ocl): DEVICE_EXEC_KERNEL = 1
    symbol(ocl): Device_EXEC_NATIVE_KERNEL = 2
    symbol(ocl): DEVICE_EXEC_NATIVE_KERNEL = 2
    symbol(ocl): Device_FP_CORRECTLY_ROUNDED_DIVIDE_SQRT = 128
    symbol(ocl): DEVICE_FP_CORRECTLY_ROUNDED_DIVIDE_SQRT = 128
    symbol(ocl): Device_FP_DENORM = 1
    symbol(ocl): DEVICE_FP_DENORM = 1
    symbol(ocl): Device_FP_FMA = 32
    symbol(ocl): DEVICE_FP_FMA = 32
    symbol(ocl): Device_FP_INF_NAN = 2
    symbol(ocl): DEVICE_FP_INF_NAN = 2
    symbol(ocl): Device_FP_ROUND_TO_INF = 16
    symbol(ocl): DEVICE_FP_ROUND_TO_INF = 16
    symbol(ocl): Device_FP_ROUND_TO_NEAREST = 4
    symbol(ocl): DEVICE_FP_ROUND_TO_NEAREST = 4
    symbol(ocl): Device_FP_ROUND_TO_ZERO = 8
    symbol(ocl): DEVICE_FP_ROUND_TO_ZERO = 8
    symbol(ocl): Device_FP_SOFT_FLOAT = 64
    symbol(ocl): DEVICE_FP_SOFT_FLOAT = 64
    symbol(ocl): Device_LOCAL_IS_GLOBAL = 2
    symbol(ocl): DEVICE_LOCAL_IS_GLOBAL = 2
    symbol(ocl): Device_LOCAL_IS_LOCAL = 1
    symbol(ocl): DEVICE_LOCAL_IS_LOCAL = 1
    symbol(ocl): Device_NO_CACHE = 0
    symbol(ocl): DEVICE_NO_CACHE = 0
    symbol(ocl): Device_NO_LOCAL_MEM = 0
    symbol(ocl): DEVICE_NO_LOCAL_MEM = 0
    symbol(ocl): Device_READ_ONLY_CACHE = 1
    symbol(ocl): DEVICE_READ_ONLY_CACHE = 1
    symbol(ocl): Device_READ_WRITE_CACHE = 2
    symbol(ocl): DEVICE_READ_WRITE_CACHE = 2
    symbol(ocl): Device_TYPE_ACCELERATOR = 8
    symbol(ocl): DEVICE_TYPE_ACCELERATOR = 8
    symbol(ocl): Device_TYPE_ALL = -1
    symbol(ocl): DEVICE_TYPE_ALL = -1
    symbol(ocl): Device_TYPE_CPU = 2
    symbol(ocl): DEVICE_TYPE_CPU = 2
    symbol(ocl): Device_TYPE_DEFAULT = 1
    symbol(ocl): DEVICE_TYPE_DEFAULT = 1
    symbol(ocl): Device_TYPE_DGPU = 65540
    symbol(ocl): DEVICE_TYPE_DGPU = 65540
    symbol(ocl): Device_TYPE_GPU = 4
    symbol(ocl): DEVICE_TYPE_GPU = 4
    symbol(ocl): Device_TYPE_IGPU = 131076
    symbol(ocl): DEVICE_TYPE_IGPU = 131076
    symbol(ocl): Device_UNKNOWN_VENDOR = 0
    symbol(ocl): DEVICE_UNKNOWN_VENDOR = 0
    symbol(ocl): Device_VENDOR_AMD = 1
    symbol(ocl): DEVICE_VENDOR_AMD = 1
    symbol(ocl): Device_VENDOR_INTEL = 2
    symbol(ocl): DEVICE_VENDOR_INTEL = 2
    symbol(ocl): Device_VENDOR_NVIDIA = 3
    symbol(ocl): DEVICE_VENDOR_NVIDIA = 3
    symbol(ocl): KernelArg_CONSTANT = 8
    symbol(ocl): KERNEL_ARG_CONSTANT = 8
    symbol(ocl): KernelArg_LOCAL = 1
    symbol(ocl): KERNEL_ARG_LOCAL = 1
    symbol(ocl): KernelArg_NO_SIZE = 256
    symbol(ocl): KERNEL_ARG_NO_SIZE = 256
    symbol(ocl): KernelArg_PTR_ONLY = 16
    symbol(ocl): KERNEL_ARG_PTR_ONLY = 16
    symbol(ocl): KernelArg_READ_ONLY = 2
    symbol(ocl): KERNEL_ARG_READ_ONLY = 2
    symbol(ocl): KernelArg_READ_WRITE = 6
    symbol(ocl): KERNEL_ARG_READ_WRITE = 6
    symbol(ocl): KernelArg_WRITE_ONLY = 4
    symbol(ocl): KERNEL_ARG_WRITE_ONLY = 4
    symbol(ocl): OCL_VECTOR_DEFAULT = 0
    symbol(ocl): OCL_VECTOR_MAX = 1
    symbol(ocl): OCL_VECTOR_OWN = 0
    symbol(ocl): Device = <class 'cv2.ocl.Device'>
    symbol(ocl): OpenCLExecutionContext = <class 'cv2.ocl.OpenCLExecutionContext'>
Extra Python code for ocl is loaded
    symbol(ogl): Buffer_ARRAY_BUFFER = 34962
    symbol(ogl): BUFFER_ARRAY_BUFFER = 34962
    symbol(ogl): Buffer_ELEMENT_ARRAY_BUFFER = 34963
    symbol(ogl): BUFFER_ELEMENT_ARRAY_BUFFER = 34963
    symbol(ogl): Buffer_PIXEL_PACK_BUFFER = 35051
    symbol(ogl): BUFFER_PIXEL_PACK_BUFFER = 35051
    symbol(ogl): Buffer_PIXEL_UNPACK_BUFFER = 35052
    symbol(ogl): BUFFER_PIXEL_UNPACK_BUFFER = 35052
    symbol(ogl): Buffer_READ_ONLY = 35000
    symbol(ogl): BUFFER_READ_ONLY = 35000
    symbol(ogl): Buffer_READ_WRITE = 35002
    symbol(ogl): BUFFER_READ_WRITE = 35002
    symbol(ogl): Buffer_WRITE_ONLY = 35001
    symbol(ogl): BUFFER_WRITE_ONLY = 35001
    symbol(ogl): LINES = 1
    symbol(ogl): LINE_LOOP = 2
    symbol(ogl): LINE_STRIP = 3
    symbol(ogl): POINTS = 0
    symbol(ogl): POLYGON = 9
    symbol(ogl): QUADS = 7
    symbol(ogl): QUAD_STRIP = 8
    symbol(ogl): TRIANGLES = 4
    symbol(ogl): TRIANGLE_FAN = 6
    symbol(ogl): TRIANGLE_STRIP = 5
    symbol(ogl): Texture2D_DEPTH_COMPONENT = 6402
    symbol(ogl): TEXTURE2D_DEPTH_COMPONENT = 6402
    symbol(ogl): Texture2D_NONE = 0
    symbol(ogl): TEXTURE2D_NONE = 0
    symbol(ogl): Texture2D_RGB = 6407
    symbol(ogl): TEXTURE2D_RGB = 6407
    symbol(ogl): Texture2D_RGBA = 6408
    symbol(ogl): TEXTURE2D_RGBA = 6408
Extra Python code for ogl is loaded
    symbol(parallel): setParallelForBackend = <built-in function setParallelForBackend>
Extra Python code for parallel is loaded
    symbol(samples): addSamplesDataSearchPath = <built-in function addSamplesDataSearchPath>
    symbol(samples): addSamplesDataSearchSubDirectory = <built-in function addSamplesDataSearchSubDirectory>
    symbol(samples): findFile = <built-in function findFile>
    symbol(samples): findFileOrKeep = <built-in function findFileOrKeep>
Extra Python code for samples is loaded
    symbol(segmentation): IntelligentScissorsMB = <class 'cv2.segmentation.IntelligentScissorsMB'>
Extra Python code for segmentation is loaded
Extra Python code for typing is loaded
    symbol(utils): copyMatAndDumpNamedArguments = <built-in function copyMatAndDumpNamedArguments>
    symbol(utils): dumpBool = <built-in function dumpBool>
    symbol(utils): dumpCString = <built-in function dumpCString>
    symbol(utils): dumpDouble = <built-in function dumpDouble>
    symbol(utils): dumpFloat = <built-in function dumpFloat>
    symbol(utils): dumpInputArray = <built-in function dumpInputArray>
    symbol(utils): dumpInputArrayOfArrays = <built-in function dumpInputArrayOfArrays>
    symbol(utils): dumpInputOutputArray = <built-in function dumpInputOutputArray>
    symbol(utils): dumpInputOutputArrayOfArrays = <built-in function dumpInputOutputArrayOfArrays>
    symbol(utils): dumpInt = <built-in function dumpInt>
    symbol(utils): dumpInt64 = <built-in function dumpInt64>
    symbol(utils): dumpRange = <built-in function dumpRange>
    symbol(utils): dumpRect = <built-in function dumpRect>
    symbol(utils): dumpRotatedRect = <built-in function dumpRotatedRect>
    symbol(utils): dumpSizeT = <built-in function dumpSizeT>
    symbol(utils): dumpString = <built-in function dumpString>
    symbol(utils): dumpTermCriteria = <built-in function dumpTermCriteria>
    symbol(utils): dumpVec2i = <built-in function dumpVec2i>
    symbol(utils): dumpVectorOfDouble = <built-in function dumpVectorOfDouble>
    symbol(utils): dumpVectorOfInt = <built-in function dumpVectorOfInt>
    symbol(utils): dumpVectorOfRect = <built-in function dumpVectorOfRect>
    symbol(utils): generateVectorOfInt = <built-in function generateVectorOfInt>
    symbol(utils): generateVectorOfMat = <built-in function generateVectorOfMat>
    symbol(utils): generateVectorOfRect = <built-in function generateVectorOfRect>
    symbol(utils): testAsyncArray = <built-in function testAsyncArray>
    symbol(utils): testAsyncException = <built-in function testAsyncException>
    symbol(utils): testOverloadResolution = <built-in function testOverloadResolution>
    symbol(utils): testRaiseGeneralException = <built-in function testRaiseGeneralException>
    symbol(utils): testReservedKeywordConversion = <built-in function testReservedKeywordConversion>
    symbol(utils): testRotatedRect = <built-in function testRotatedRect>
    symbol(utils): testRotatedRectVector = <built-in function testRotatedRectVector>
    symbol(utils): fs = <module 'cv2.utils.fs'>
    symbol(utils): nested = <module 'cv2.utils.nested'>
    symbol(utils): ClassWithKeywordProperties = <class 'cv2.utils.ClassWithKeywordProperties'>
Extra Python code for utils is loaded
    symbol(videoio_registry): getBackendName = <built-in function getBackendName>
    symbol(videoio_registry): getBackends = <built-in function getBackends>
    symbol(videoio_registry): getCameraBackendPluginVersion = <built-in function getCameraBackendPluginVersion>
    symbol(videoio_registry): getCameraBackends = <built-in function getCameraBackends>
    symbol(videoio_registry): getStreamBackendPluginVersion = <built-in function getStreamBackendPluginVersion>
    symbol(videoio_registry): getStreamBackends = <built-in function getStreamBackends>
    symbol(videoio_registry): getWriterBackendPluginVersion = <built-in function getWriterBackendPluginVersion>
    symbol(videoio_registry): getWriterBackends = <built-in function getWriterBackends>
    symbol(videoio_registry): hasBackend = <built-in function hasBackend>
    symbol(videoio_registry): isBackendBuiltIn = <built-in function isBackendBuiltIn>
Extra Python code for videoio_registry is loaded
OpenCV loader: DONE
