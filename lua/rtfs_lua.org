* LUA_API int lua_cpcall (lua_State *L, lua_CFunction func, void *ud)

* typedef int (*lua_CFunction) (lua_State *L);

* typedef void (*Pfunc) (lua_State *L, void *ud);


* Value
#+begin_src c
/*
** Union of all Lua values
*/
typedef union {
  GCObject *gc;
  void *p;
  lua_Number n;
  int b;
} Value;
#+end_src


#define savestack(L,p)		((char *)(p) - (char *)L->stack)


* int luaD_rawrunprotected (lua_State *L, Pfunc f, void *ud)


#define LUAI_TRY(L,c,a)	if (setjmp((c)->b) == 0) { a }


LUALIB_API int luaL_loadfile (lua_State *L, const char *filename) {
    lua_load(L, getF, &lf, lua_tostring(L, -1));
